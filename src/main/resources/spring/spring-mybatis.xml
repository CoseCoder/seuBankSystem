<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 扫描service -->
	<context:component-scan base-package="group_seven.*.service" />
	<!-- 多数据源aop datasource -->
	<!--<context:component-scan base-package="screen.commons.datasource" />-->

	<!-- base dataSource -->
	<bean name="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="minIdle" value="10" />
		<property name="maxWait" value="60000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
		<property name="filters" value="mergeStat" />
	</bean>

	<!-- 主库 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
	<property name="url" value="${master_driverUrl}" />
		<property name="username" value="${master_username}" />
		<property name="password" value="${master_password}" />
	</bean>

	<!-- 从库 -->
	<!-- <bean name="slave-dataSource" parent="baseDataSource" init-method="init"> 
		<property name="url" value="${slave_driverUrl}" /> <property name="username" 
		value="${slave_username}" /> <property name="password" value="${slave_password}" 
		/> </bean> -->

	<!--主从库选择 -->
	<!--<bean id="dynamicDataSource" class="screen.commons.datasource.DynamicDataSource">-->
		<!--<property name="master" ref="master-dataSource" />-->
		<!--&lt;!&ndash; <property name="slaves"> <list> <ref bean="slave-dataSource"/> </list> -->
			<!--</property> &ndash;&gt;-->
	<!--</bean>-->

	<!-- spring整合mybatis （mybatis-spring项目提供整合类） -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:/sqlMapperXml/*.xml"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- MyBatis 动态实现 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 对Dao 接口动态实现，需要知道接口在哪 -->
		<property name="basePackage" value="group_seven.*.mapper" />
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 事务管理 属性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	 <!--配置切面 -->
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice"
			pointcut="execution(* group_seven.*.service..*.*(..))" />
	</aop:config>
</beans>